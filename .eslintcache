[{"C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\index.js":"1","C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\App.js":"2","C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\Components\\Navbar.js":"3","C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\Components\\Results.js":"4"},{"size":206,"mtime":1648642446000,"results":"5","hashOfConfig":"6"},{"size":288,"mtime":1664385384693,"results":"7","hashOfConfig":"6"},{"size":504,"mtime":1664385016234,"results":"8","hashOfConfig":"6"},{"size":2273,"mtime":1664385142718,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"otpsj4",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\index.js",[],["22","23"],"C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\App.js",["24"],"import React, { useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport Results from './Components/Results';\nimport './App.css'\n\nfunction App() {\n\n\n\n  return (\n    < div className='container '>\n      <Navbar />\n      <Results />\n\n\n    </div>\n\n  )\n}\n\nexport default App;\n","C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\Components\\Navbar.js",["25"],"import React from 'react'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n  <>\r\n <nav className=\"navbar  bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">GetInfo</a>\r\n   \r\n    <div className=\"collapse   navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n        <h4 className='mx-5 text-light'>Search Where are you going..</h4>\r\n        \r\n\r\n      </ul>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n  </>\r\n  )\r\n}\r\n","C:\\Users\\asus\\Desktop\\random practice\\Country Project\\src\\Components\\Results.js",["26","27"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './Results.css'\r\nexport default function Results() {\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [data, setdata] = useState([]);\r\n    const [search, setsearch] = useState(\"\");\r\n    const [searchdata, setsearchdata] = useState(\"\");\r\n\r\n    function handleSearchChange(e) {\r\n        setsearch(e.target.value)\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setsearchdata(search)\r\n    }\r\n\r\n    const filtered = !searchdata ? data : data.filter((countries) =>\r\n        countries.name.toLowerCase().includes(searchdata.toLowerCase())\r\n    );\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://restcountries.com/v2/all')\r\n            .then(response => response.json())\r\n            .then(data => { setdata(data); console.log(data); setisLoading(false); });\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n\r\n\r\n            <form className=\"d-flex my-3\" role=\"search\" onSubmit={handleSubmit} >\r\n                <input className=\"form-control me-2\" type=\"search\" value={search} onChange={handleSearchChange} placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success\" >Search</button>\r\n            </form>\r\n\r\n          \r\n\r\n            <div class=\"row row-cols-1 row-cols-md-3 g-4 my-5 \">\r\n                {filtered.map(data =>\r\n                    <>\r\n                        <div className='col my-3 card-group'>\r\n                            <div className='card bg-info h-100 border-secondary mycard_class' style={{ \"width\": \"18rem\" }}  >\r\n                                <img src={data.flags.png} style={{ \"width\": \"100%\", \"height\": \"60%\" }} />\r\n                                <div class=\"card-body\">\r\n                                    <h4> {data.name}</h4>\r\n                                    <p>Capital:{data.capital}</p>\r\n                                    <p>Population:{data.population}</p>\r\n                                    <p>Region:{data.region}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n\r\n                )}     \r\n                   </div>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":8,"column":5,"nodeType":"38","endLine":8,"endColumn":42},{"ruleId":"32","severity":1,"message":"39","line":5,"column":12,"nodeType":"34","messageId":"35","endLine":5,"endColumn":21},{"ruleId":"40","severity":1,"message":"41","line":52,"column":33,"nodeType":"38","endLine":52,"endColumn":106},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]